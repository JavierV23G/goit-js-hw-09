{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,UAGT,IAAMC,EAAaC,SAASC,cAAc,wBACpCC,EAAYF,SAASC,cAAc,uBACnCE,EAAcH,SAASC,cAAc,yBAI3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZWN,SAASC,cAAc,2BAgB/Ba,iBAAiB,SAAS,SAAAC,GAClCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOnB,EAAWoB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAEhC,GAAIF,GAAS,GAAKG,GAAQ,GAAKC,GAAU,EACvC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBX,EAAAF,GAASG,OAAO6B,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAGjDqB,OAAM,SAAAH,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBX,EAAAF,GAASG,OAAOgC,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAIjDW,GAASG,OAGXzB,EAAAF,GAASG,OAAOgC,QACd,4D","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '500px',\n});\n\nconst delayInput = document.querySelector('input[name= \"delay\"]');\nconst stepInput = document.querySelector('input[name= \"step\"]');\nconst amountInput = document.querySelector('input[name= \"amount\"]');\nconst submitBtn = document.querySelector('button[type = \"submit\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  let delay = Number(delayInput.value);\n  let step = Number(stepInput.value);\n  let amount = Number(amountInput.value);\n\n  if (delay >= 0 && step >= 0 && amount >= 0) {\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      delay += step;\n    }\n  } else {\n    Notiflix.Notify.failure(\n      'Please enter positive numbers in each of the input fields'\n    );\n  }\n});\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.6e7cffee.js.map"}